{
  "version": 3,
  "sources": ["../../bpmn-js/lib/features/modeling/BpmnFactory.js"],
  "sourcesContent": ["import {\n  map,\n  assign,\n  pick\n} from 'min-dash';\n\nimport {\n  isAny\n} from './util/ModelingUtil';\n\nimport {\n  is\n} from '../../util/ModelUtil';\n\n/**\n * @typedef {import('../../model/Types').Moddle} Moddle\n * @typedef {import('../../model/Types').ModdleElement} ModdleElement\n *\n * @typedef {import('diagram-js/lib/util/Types').Point} Point\n */\n\n/**\n * A factory for BPMN elements.\n *\n * @param {Moddle} moddle\n */\nexport default function BpmnFactory(moddle) {\n  this._model = moddle;\n}\n\nBpmnFactory.$inject = [ 'moddle' ];\n\n/**\n * @param {ModdleElement} element\n *\n * @return {boolean}\n */\nBpmnFactory.prototype._needsId = function(element) {\n  return isAny(element, [\n    'bpmn:RootElement',\n    'bpmn:FlowElement',\n    'bpmn:MessageFlow',\n    'bpmn:DataAssociation',\n    'bpmn:Artifact',\n    'bpmn:Participant',\n    'bpmn:Lane',\n    'bpmn:LaneSet',\n    'bpmn:Process',\n    'bpmn:Collaboration',\n    'bpmndi:BPMNShape',\n    'bpmndi:BPMNEdge',\n    'bpmndi:BPMNDiagram',\n    'bpmndi:BPMNPlane',\n    'bpmn:Property',\n    'bpmn:CategoryValue'\n  ]);\n};\n\n/**\n * @param {ModdleElement} element\n */\nBpmnFactory.prototype._ensureId = function(element) {\n  if (element.id) {\n    this._model.ids.claim(element.id, element);\n    return;\n  }\n\n  // generate semantic ids for elements\n  // bpmn:SequenceFlow -> SequenceFlow_ID\n  var prefix;\n\n  if (is(element, 'bpmn:Activity')) {\n    prefix = 'Activity';\n  } else if (is(element, 'bpmn:Event')) {\n    prefix = 'Event';\n  } else if (is(element, 'bpmn:Gateway')) {\n    prefix = 'Gateway';\n  } else if (isAny(element, [ 'bpmn:SequenceFlow', 'bpmn:MessageFlow' ])) {\n    prefix = 'Flow';\n  } else {\n    prefix = (element.$type || '').replace(/^[^:]*:/g, '');\n  }\n\n  prefix += '_';\n\n  if (!element.id && this._needsId(element)) {\n    element.id = this._model.ids.nextPrefixed(prefix, element);\n  }\n};\n\n/**\n * Create BPMN element.\n *\n * @param {string} type\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.create = function(type, attrs) {\n  var element = this._model.create(type, attrs || {});\n\n  this._ensureId(element);\n\n  return element;\n};\n\n/**\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiLabel = function() {\n  return this.create('bpmndi:BPMNLabel', {\n    bounds: this.createDiBounds()\n  });\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiShape = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNShape', assign({\n    bpmnElement: semantic,\n    bounds: this.createDiBounds()\n  }, attrs));\n};\n\n/**\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiBounds = function(bounds) {\n  return this.create('dc:Bounds', bounds);\n};\n\n/**\n * @param {Point[]} waypoints\n *\n * @return {ModdleElement[]}\n */\nBpmnFactory.prototype.createDiWaypoints = function(waypoints) {\n  var self = this;\n\n  return map(waypoints, function(pos) {\n    return self.createDiWaypoint(pos);\n  });\n};\n\n/**\n * @param {Point} point\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiWaypoint = function(point) {\n  return this.create('dc:Point', pick(point, [ 'x', 'y' ]));\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiEdge = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNEdge', assign({\n    bpmnElement: semantic,\n    waypoint: this.createDiWaypoints([])\n  }, attrs));\n};\n\n/**\n * @param {ModdleElement} semantic\n * @param {Object} [attrs]\n *\n * @return {ModdleElement}\n */\nBpmnFactory.prototype.createDiPlane = function(semantic, attrs) {\n  return this.create('bpmndi:BPMNPlane', assign({\n    bpmnElement: semantic\n  }, attrs));\n};\n"],
  "mappings": ";;;;;;;;;;;AA0Be,SAAR,YAA6B,QAAQ;AAC1C,OAAK,SAAS;AAChB;AAEA,YAAY,UAAU,CAAE,QAAS;AAOjC,YAAY,UAAU,WAAW,SAAS,SAAS;AACjD,SAAO,MAAM,SAAS;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC;AACH;AAKA,YAAY,UAAU,YAAY,SAAS,SAAS;AAClD,MAAI,QAAQ,IAAI;AACd,SAAK,OAAO,IAAI,MAAM,QAAQ,IAAI,OAAO;AACzC;AAAA,EACF;AAIA,MAAI;AAEJ,MAAI,GAAG,SAAS,eAAe,GAAG;AAChC,aAAS;AAAA,EACX,WAAW,GAAG,SAAS,YAAY,GAAG;AACpC,aAAS;AAAA,EACX,WAAW,GAAG,SAAS,cAAc,GAAG;AACtC,aAAS;AAAA,EACX,WAAW,MAAM,SAAS,CAAE,qBAAqB,kBAAmB,CAAC,GAAG;AACtE,aAAS;AAAA,EACX,OAAO;AACL,cAAU,QAAQ,SAAS,IAAI,QAAQ,YAAY,EAAE;AAAA,EACvD;AAEA,YAAU;AAEV,MAAI,CAAC,QAAQ,MAAM,KAAK,SAAS,OAAO,GAAG;AACzC,YAAQ,KAAK,KAAK,OAAO,IAAI,aAAa,QAAQ,OAAO;AAAA,EAC3D;AACF;AAUA,YAAY,UAAU,SAAS,SAAS,MAAM,OAAO;AACnD,MAAI,UAAU,KAAK,OAAO,OAAO,MAAM,SAAS,CAAC,CAAC;AAElD,OAAK,UAAU,OAAO;AAEtB,SAAO;AACT;AAKA,YAAY,UAAU,gBAAgB,WAAW;AAC/C,SAAO,KAAK,OAAO,oBAAoB;AAAA,IACrC,QAAQ,KAAK,eAAe;AAAA,EAC9B,CAAC;AACH;AAOA,YAAY,UAAU,gBAAgB,SAAS,UAAU,OAAO;AAC9D,SAAO,KAAK,OAAO,oBAAoB,OAAO;AAAA,IAC5C,aAAa;AAAA,IACb,QAAQ,KAAK,eAAe;AAAA,EAC9B,GAAG,KAAK,CAAC;AACX;AAKA,YAAY,UAAU,iBAAiB,SAAS,QAAQ;AACtD,SAAO,KAAK,OAAO,aAAa,MAAM;AACxC;AAOA,YAAY,UAAU,oBAAoB,SAAS,WAAW;AAC5D,MAAI,OAAO;AAEX,SAAO,IAAI,WAAW,SAAS,KAAK;AAClC,WAAO,KAAK,iBAAiB,GAAG;AAAA,EAClC,CAAC;AACH;AAOA,YAAY,UAAU,mBAAmB,SAAS,OAAO;AACvD,SAAO,KAAK,OAAO,YAAY,KAAK,OAAO,CAAE,KAAK,GAAI,CAAC,CAAC;AAC1D;AAQA,YAAY,UAAU,eAAe,SAAS,UAAU,OAAO;AAC7D,SAAO,KAAK,OAAO,mBAAmB,OAAO;AAAA,IAC3C,aAAa;AAAA,IACb,UAAU,KAAK,kBAAkB,CAAC,CAAC;AAAA,EACrC,GAAG,KAAK,CAAC;AACX;AAQA,YAAY,UAAU,gBAAgB,SAAS,UAAU,OAAO;AAC9D,SAAO,KAAK,OAAO,oBAAoB,OAAO;AAAA,IAC5C,aAAa;AAAA,EACf,GAAG,KAAK,CAAC;AACX;",
  "names": []
}
